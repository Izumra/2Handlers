// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/edit/{Id}/": {
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Метод API, позволяющий авторизированному пользователю отредактировать новость по id. Учтены пожелания и предусмотрено сохранение полей от перезаписи,  если значение не было передано в запросе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Редактировать новость",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Идентификатор новости",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Тело запроса формата 'application/json', содержащее информацию для изменения записи",
                        "name": "UpdateNews",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.NewsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Структура успешного ответа на запрос изменения записи",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.Pattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/responses.ListResBody"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Структура неудачного ответа на запрос изменения записи",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.Pattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/list/{offset}/{count}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Метод API, позволяющий авторизированному пользователю получить список новостей в заданном диапазоне параметроми 'offset' и 'count'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Список новостей",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Шаг смещения",
                        "name": "offset",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Количество",
                        "name": "count",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Структура успешного ответа на запрос получения списка новостей",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.Pattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/responses.ListResBody"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Структура неудачного ответа на запрос получения списка новостей",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.Pattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Метод API, позволяющий пользователю произвести авторизацию в системе. После успешного прохождения авторизации, в ответе выдастся JWT токен доступа, требуемый для остальных обработчиков в качестве заголовка 'Authorization'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Авторизация",
                "parameters": [
                    {
                        "description": "Тело запроса формата 'application/json', содержащее информацию для авторизации",
                        "name": "AuthBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Структура успешного ответа на запрос авторизации",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.Pattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Структура неудачного ответа на запрос авторизации",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.Pattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.News": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "requests.LoginBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "requests.NewsData": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "responses.ListResBody": {
            "type": "object",
            "properties": {
                "news": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.News"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "responses.Pattern": {
            "type": "object",
            "properties": {
                "data": {
                    "x-nullable": true
                },
                "error": {
                    "x-nullable": true
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "2 Обработчика",
	Description:      "2 обработчика.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
